# Generated from ./Xalang.g4 by ANTLR 4.9.2
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO



def serializedATN():
    with StringIO() as buf:
        buf.write("\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\2?")
        buf.write("\u018e\b\1\4\2\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7")
        buf.write("\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13\t\13\4\f\t\f\4\r\t\r")
        buf.write("\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22\4\23")
        buf.write("\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30")
        buf.write("\4\31\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36")
        buf.write("\t\36\4\37\t\37\4 \t \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%")
        buf.write("\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4,\t,\4-\t-\4.")
        buf.write("\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64")
        buf.write("\t\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4:\t:")
        buf.write("\4;\t;\4<\t<\4=\t=\4>\t>\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3")
        buf.write("\2\3\2\3\2\3\2\3\3\3\3\3\4\3\4\3\5\3\5\3\6\3\6\3\7\3\7")
        buf.write("\3\7\3\7\3\7\3\7\3\7\3\7\3\7\3\7\3\7\3\7\3\7\3\7\3\b\3")
        buf.write("\b\3\t\3\t\3\n\3\n\3\n\3\n\3\n\3\n\3\n\3\n\3\13\3\13\3")
        buf.write("\f\3\f\3\r\3\r\3\r\3\r\3\r\3\r\3\r\3\r\3\r\3\r\3\r\3\r")
        buf.write("\3\r\3\16\3\16\3\16\3\16\3\16\3\16\3\16\3\16\3\16\3\16")
        buf.write("\3\16\3\17\3\17\3\17\3\17\3\17\3\17\3\17\3\17\3\17\3\17")
        buf.write("\3\17\3\17\3\20\3\20\3\20\3\20\3\20\3\20\3\20\3\20\3\20")
        buf.write("\3\20\3\20\3\20\3\20\3\20\3\20\3\20\3\21\3\21\3\22\3\22")
        buf.write("\3\23\3\23\3\24\3\24\3\24\3\25\3\25\3\25\3\26\3\26\3\26")
        buf.write("\3\27\3\27\3\30\3\30\3\31\3\31\3\32\3\32\3\32\3\32\3\33")
        buf.write("\3\33\3\34\3\34\3\34\3\35\3\35\3\35\3\36\3\36\3\37\3\37")
        buf.write("\3 \3 \3 \3!\3!\3!\3\"\3\"\3\"\3#\3#\3#\3$\3$\3%\3%\3")
        buf.write("&\3&\3\'\3\'\3\'\3(\3(\3(\3)\3)\3)\3*\3*\3+\3+\3,\3,\3")
        buf.write(",\3-\3-\3-\3.\3.\3.\3/\3/\3/\3/\3/\3\60\3\60\3\60\3\61")
        buf.write("\3\61\3\61\3\62\3\62\3\62\3\63\3\63\3\63\3\64\3\64\3\64")
        buf.write("\3\65\3\65\3\65\3\65\3\66\3\66\3\66\3\66\3\67\3\67\7\67")
        buf.write("\u014e\n\67\f\67\16\67\u0151\13\67\38\58\u0154\n8\38\6")
        buf.write("8\u0157\n8\r8\168\u0158\39\39\39\39\39\39\39\39\39\59")
        buf.write("\u0164\n9\3:\3:\7:\u0168\n:\f:\16:\u016b\13:\3:\3:\3;")
        buf.write("\3;\3;\3<\3<\3<\3<\3=\3=\3=\3=\7=\u017a\n=\f=\16=\u017d")
        buf.write("\13=\3=\3=\3=\3=\3=\3>\3>\3>\3>\7>\u0188\n>\f>\16>\u018b")
        buf.write("\13>\3>\3>\4\u0169\u017b\2?\3\3\5\4\7\5\t\6\13\7\r\b\17")
        buf.write("\t\21\n\23\13\25\f\27\r\31\16\33\17\35\20\37\21!\22#\23")
        buf.write("%\24\'\25)\26+\27-\30/\31\61\32\63\33\65\34\67\359\36")
        buf.write(";\37= ?!A\"C#E$G%I&K\'M(O)Q*S+U,W-Y.[/]\60_\61a\62c\63")
        buf.write("e\64g\65i\66k\67m8o9q:s;u<w=y>{?\3\2\6\5\2C\\aac|\6\2")
        buf.write("\62;C\\aac|\5\2\13\f\17\17\"\"\4\2\f\f\17\17\2\u0194\2")
        buf.write("\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3")
        buf.write("\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2")
        buf.write("\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2\2\2\33\3\2\2")
        buf.write("\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2%")
        buf.write("\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2")
        buf.write("\2/\3\2\2\2\2\61\3\2\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67")
        buf.write("\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2")
        buf.write("A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2\2\2I\3\2\2\2")
        buf.write("\2K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2")
        buf.write("\2\2U\3\2\2\2\2W\3\2\2\2\2Y\3\2\2\2\2[\3\2\2\2\2]\3\2")
        buf.write("\2\2\2_\3\2\2\2\2a\3\2\2\2\2c\3\2\2\2\2e\3\2\2\2\2g\3")
        buf.write("\2\2\2\2i\3\2\2\2\2k\3\2\2\2\2m\3\2\2\2\2o\3\2\2\2\2q")
        buf.write("\3\2\2\2\2s\3\2\2\2\2u\3\2\2\2\2w\3\2\2\2\2y\3\2\2\2\2")
        buf.write("{\3\2\2\2\3}\3\2\2\2\5\u0088\3\2\2\2\7\u008a\3\2\2\2\t")
        buf.write("\u008c\3\2\2\2\13\u008e\3\2\2\2\r\u0090\3\2\2\2\17\u009e")
        buf.write("\3\2\2\2\21\u00a0\3\2\2\2\23\u00a2\3\2\2\2\25\u00aa\3")
        buf.write("\2\2\2\27\u00ac\3\2\2\2\31\u00ae\3\2\2\2\33\u00bb\3\2")
        buf.write("\2\2\35\u00c6\3\2\2\2\37\u00d2\3\2\2\2!\u00e2\3\2\2\2")
        buf.write("#\u00e4\3\2\2\2%\u00e6\3\2\2\2\'\u00e8\3\2\2\2)\u00eb")
        buf.write("\3\2\2\2+\u00ee\3\2\2\2-\u00f1\3\2\2\2/\u00f3\3\2\2\2")
        buf.write("\61\u00f5\3\2\2\2\63\u00f7\3\2\2\2\65\u00fb\3\2\2\2\67")
        buf.write("\u00fd\3\2\2\29\u0100\3\2\2\2;\u0103\3\2\2\2=\u0105\3")
        buf.write("\2\2\2?\u0107\3\2\2\2A\u010a\3\2\2\2C\u010d\3\2\2\2E\u0110")
        buf.write("\3\2\2\2G\u0113\3\2\2\2I\u0115\3\2\2\2K\u0117\3\2\2\2")
        buf.write("M\u0119\3\2\2\2O\u011c\3\2\2\2Q\u011f\3\2\2\2S\u0122\3")
        buf.write("\2\2\2U\u0124\3\2\2\2W\u0126\3\2\2\2Y\u0129\3\2\2\2[\u012c")
        buf.write("\3\2\2\2]\u012f\3\2\2\2_\u0134\3\2\2\2a\u0137\3\2\2\2")
        buf.write("c\u013a\3\2\2\2e\u013d\3\2\2\2g\u0140\3\2\2\2i\u0143\3")
        buf.write("\2\2\2k\u0147\3\2\2\2m\u014b\3\2\2\2o\u0153\3\2\2\2q\u0163")
        buf.write("\3\2\2\2s\u0165\3\2\2\2u\u016e\3\2\2\2w\u0171\3\2\2\2")
        buf.write("y\u0175\3\2\2\2{\u0183\3\2\2\2}~\7C\2\2~\177\7C\2\2\177")
        buf.write("\u0080\7C\2\2\u0080\u0081\7Z\2\2\u0081\u0082\7C\2\2\u0082")
        buf.write("\u0083\7Z\2\2\u0083\u0084\7C\2\2\u0084\u0085\7Z\2\2\u0085")
        buf.write("\u0086\7C\2\2\u0086\u0087\7a\2\2\u0087\4\3\2\2\2\u0088")
        buf.write("\u0089\7.\2\2\u0089\6\3\2\2\2\u008a\u008b\7]\2\2\u008b")
        buf.write("\b\3\2\2\2\u008c\u008d\7_\2\2\u008d\n\3\2\2\2\u008e\u008f")
        buf.write("\7?\2\2\u008f\f\3\2\2\2\u0090\u0091\7C\2\2\u0091\u0092")
        buf.write("\7Z\2\2\u0092\u0093\7Z\2\2\u0093\u0094\7C\2\2\u0094\u0095")
        buf.write("\7C\2\2\u0095\u0096\7Z\2\2\u0096\u0097\7C\2\2\u0097\u0098")
        buf.write("\7C\2\2\u0098\u0099\7C\2\2\u0099\u009a\7Z\2\2\u009a\u009b")
        buf.write("\7C\2\2\u009b\u009c\7Z\2\2\u009c\u009d\7a\2\2\u009d\16")
        buf.write("\3\2\2\2\u009e\u009f\7*\2\2\u009f\20\3\2\2\2\u00a0\u00a1")
        buf.write("\7+\2\2\u00a1\22\3\2\2\2\u00a2\u00a3\7C\2\2\u00a3\u00a4")
        buf.write("\7C\2\2\u00a4\u00a5\7C\2\2\u00a5\u00a6\7C\2\2\u00a6\u00a7")
        buf.write("\7Z\2\2\u00a7\u00a8\7C\2\2\u00a8\u00a9\7a\2\2\u00a9\24")
        buf.write("\3\2\2\2\u00aa\u00ab\7}\2\2\u00ab\26\3\2\2\2\u00ac\u00ad")
        buf.write("\7\177\2\2\u00ad\30\3\2\2\2\u00ae\u00af\7C\2\2\u00af\u00b0")
        buf.write("\7C\2\2\u00b0\u00b1\7Z\2\2\u00b1\u00b2\7C\2\2\u00b2\u00b3")
        buf.write("\7C\2\2\u00b3\u00b4\7C\2\2\u00b4\u00b5\7C\2\2\u00b5\u00b6")
        buf.write("\7C\2\2\u00b6\u00b7\7C\2\2\u00b7\u00b8\7Z\2\2\u00b8\u00b9")
        buf.write("\7C\2\2\u00b9\u00ba\7a\2\2\u00ba\32\3\2\2\2\u00bb\u00bc")
        buf.write("\7C\2\2\u00bc\u00bd\7C\2\2\u00bd\u00be\7Z\2\2\u00be\u00bf")
        buf.write("\7C\2\2\u00bf\u00c0\7C\2\2\u00c0\u00c1\7C\2\2\u00c1\u00c2")
        buf.write("\7C\2\2\u00c2\u00c3\7C\2\2\u00c3\u00c4\7C\2\2\u00c4\u00c5")
        buf.write("\7a\2\2\u00c5\34\3\2\2\2\u00c6\u00c7\7C\2\2\u00c7\u00c8")
        buf.write("\7C\2\2\u00c8\u00c9\7Z\2\2\u00c9\u00ca\7C\2\2\u00ca\u00cb")
        buf.write("\7Z\2\2\u00cb\u00cc\7Z\2\2\u00cc\u00cd\7Z\2\2\u00cd\u00ce")
        buf.write("\7C\2\2\u00ce\u00cf\7Z\2\2\u00cf\u00d0\7C\2\2\u00d0\u00d1")
        buf.write("\7a\2\2\u00d1\36\3\2\2\2\u00d2\u00d3\7C\2\2\u00d3\u00d4")
        buf.write("\7Z\2\2\u00d4\u00d5\7Z\2\2\u00d5\u00d6\7C\2\2\u00d6\u00d7")
        buf.write("\7C\2\2\u00d7\u00d8\7C\2\2\u00d8\u00d9\7C\2\2\u00d9\u00da")
        buf.write("\7C\2\2\u00da\u00db\7C\2\2\u00db\u00dc\7C\2\2\u00dc\u00dd")
        buf.write("\7Z\2\2\u00dd\u00de\7C\2\2\u00de\u00df\7C\2\2\u00df\u00e0")
        buf.write("\7C\2\2\u00e0\u00e1\7a\2\2\u00e1 \3\2\2\2\u00e2\u00e3")
        buf.write("\7/\2\2\u00e3\"\3\2\2\2\u00e4\u00e5\7#\2\2\u00e5$\3\2")
        buf.write("\2\2\u00e6\u00e7\7\u0080\2\2\u00e7&\3\2\2\2\u00e8\u00e9")
        buf.write("\7-\2\2\u00e9\u00ea\7-\2\2\u00ea(\3\2\2\2\u00eb\u00ec")
        buf.write("\7/\2\2\u00ec\u00ed\7/\2\2\u00ed*\3\2\2\2\u00ee\u00ef")
        buf.write("\7,\2\2\u00ef\u00f0\7,\2\2\u00f0,\3\2\2\2\u00f1\u00f2")
        buf.write("\7,\2\2\u00f2.\3\2\2\2\u00f3\u00f4\7\61\2\2\u00f4\60\3")
        buf.write("\2\2\2\u00f5\u00f6\7\'\2\2\u00f6\62\3\2\2\2\u00f7\u00f8")
        buf.write("\7f\2\2\u00f8\u00f9\7k\2\2\u00f9\u00fa\7x\2\2\u00fa\64")
        buf.write("\3\2\2\2\u00fb\u00fc\7-\2\2\u00fc\66\3\2\2\2\u00fd\u00fe")
        buf.write("\7>\2\2\u00fe\u00ff\7>\2\2\u00ff8\3\2\2\2\u0100\u0101")
        buf.write("\7@\2\2\u0101\u0102\7@\2\2\u0102:\3\2\2\2\u0103\u0104")
        buf.write("\7@\2\2\u0104<\3\2\2\2\u0105\u0106\7>\2\2\u0106>\3\2\2")
        buf.write("\2\u0107\u0108\7@\2\2\u0108\u0109\7?\2\2\u0109@\3\2\2")
        buf.write("\2\u010a\u010b\7>\2\2\u010b\u010c\7?\2\2\u010cB\3\2\2")
        buf.write("\2\u010d\u010e\7?\2\2\u010e\u010f\7?\2\2\u010fD\3\2\2")
        buf.write("\2\u0110\u0111\7#\2\2\u0111\u0112\7?\2\2\u0112F\3\2\2")
        buf.write("\2\u0113\u0114\7(\2\2\u0114H\3\2\2\2\u0115\u0116\7`\2")
        buf.write("\2\u0116J\3\2\2\2\u0117\u0118\7~\2\2\u0118L\3\2\2\2\u0119")
        buf.write("\u011a\7(\2\2\u011a\u011b\7(\2\2\u011bN\3\2\2\2\u011c")
        buf.write("\u011d\7`\2\2\u011d\u011e\7`\2\2\u011eP\3\2\2\2\u011f")
        buf.write("\u0120\7~\2\2\u0120\u0121\7~\2\2\u0121R\3\2\2\2\u0122")
        buf.write("\u0123\7A\2\2\u0123T\3\2\2\2\u0124\u0125\7<\2\2\u0125")
        buf.write("V\3\2\2\2\u0126\u0127\7,\2\2\u0127\u0128\7?\2\2\u0128")
        buf.write("X\3\2\2\2\u0129\u012a\7\61\2\2\u012a\u012b\7?\2\2\u012b")
        buf.write("Z\3\2\2\2\u012c\u012d\7\'\2\2\u012d\u012e\7?\2\2\u012e")
        buf.write("\\\3\2\2\2\u012f\u0130\7f\2\2\u0130\u0131\7k\2\2\u0131")
        buf.write("\u0132\7x\2\2\u0132\u0133\7?\2\2\u0133^\3\2\2\2\u0134")
        buf.write("\u0135\7-\2\2\u0135\u0136\7?\2\2\u0136`\3\2\2\2\u0137")
        buf.write("\u0138\7/\2\2\u0138\u0139\7?\2\2\u0139b\3\2\2\2\u013a")
        buf.write("\u013b\7(\2\2\u013b\u013c\7?\2\2\u013cd\3\2\2\2\u013d")
        buf.write("\u013e\7~\2\2\u013e\u013f\7?\2\2\u013ff\3\2\2\2\u0140")
        buf.write("\u0141\7`\2\2\u0141\u0142\7?\2\2\u0142h\3\2\2\2\u0143")
        buf.write("\u0144\7>\2\2\u0144\u0145\7>\2\2\u0145\u0146\7?\2\2\u0146")
        buf.write("j\3\2\2\2\u0147\u0148\7@\2\2\u0148\u0149\7@\2\2\u0149")
        buf.write("\u014a\7?\2\2\u014al\3\2\2\2\u014b\u014f\t\2\2\2\u014c")
        buf.write("\u014e\t\3\2\2\u014d\u014c\3\2\2\2\u014e\u0151\3\2\2\2")
        buf.write("\u014f\u014d\3\2\2\2\u014f\u0150\3\2\2\2\u0150n\3\2\2")
        buf.write("\2\u0151\u014f\3\2\2\2\u0152\u0154\7/\2\2\u0153\u0152")
        buf.write("\3\2\2\2\u0153\u0154\3\2\2\2\u0154\u0156\3\2\2\2\u0155")
        buf.write("\u0157\4\62;\2\u0156\u0155\3\2\2\2\u0157\u0158\3\2\2\2")
        buf.write("\u0158\u0156\3\2\2\2\u0158\u0159\3\2\2\2\u0159p\3\2\2")
        buf.write("\2\u015a\u015b\7V\2\2\u015b\u015c\7t\2\2\u015c\u015d\7")
        buf.write("w\2\2\u015d\u0164\7g\2\2\u015e\u015f\7H\2\2\u015f\u0160")
        buf.write("\7c\2\2\u0160\u0161\7n\2\2\u0161\u0162\7u\2\2\u0162\u0164")
        buf.write("\7g\2\2\u0163\u015a\3\2\2\2\u0163\u015e\3\2\2\2\u0164")
        buf.write("r\3\2\2\2\u0165\u0169\7$\2\2\u0166\u0168\13\2\2\2\u0167")
        buf.write("\u0166\3\2\2\2\u0168\u016b\3\2\2\2\u0169\u016a\3\2\2\2")
        buf.write("\u0169\u0167\3\2\2\2\u016a\u016c\3\2\2\2\u016b\u0169\3")
        buf.write("\2\2\2\u016c\u016d\7$\2\2\u016dt\3\2\2\2\u016e\u016f\7")
        buf.write("<\2\2\u016f\u0170\7+\2\2\u0170v\3\2\2\2\u0171\u0172\t")
        buf.write("\4\2\2\u0172\u0173\3\2\2\2\u0173\u0174\b<\2\2\u0174x\3")
        buf.write("\2\2\2\u0175\u0176\7\61\2\2\u0176\u0177\7,\2\2\u0177\u017b")
        buf.write("\3\2\2\2\u0178\u017a\13\2\2\2\u0179\u0178\3\2\2\2\u017a")
        buf.write("\u017d\3\2\2\2\u017b\u017c\3\2\2\2\u017b\u0179\3\2\2\2")
        buf.write("\u017c\u017e\3\2\2\2\u017d\u017b\3\2\2\2\u017e\u017f\7")
        buf.write(",\2\2\u017f\u0180\7\61\2\2\u0180\u0181\3\2\2\2\u0181\u0182")
        buf.write("\b=\2\2\u0182z\3\2\2\2\u0183\u0184\7\61\2\2\u0184\u0185")
        buf.write("\7\61\2\2\u0185\u0189\3\2\2\2\u0186\u0188\n\5\2\2\u0187")
        buf.write("\u0186\3\2\2\2\u0188\u018b\3\2\2\2\u0189\u0187\3\2\2\2")
        buf.write("\u0189\u018a\3\2\2\2\u018a\u018c\3\2\2\2\u018b\u0189\3")
        buf.write("\2\2\2\u018c\u018d\b>\2\2\u018d|\3\2\2\2\n\2\u014f\u0153")
        buf.write("\u0158\u0163\u0169\u017b\u0189\3\b\2\2")
        return buf.getvalue()


class XalangLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    T__15 = 16
    T__16 = 17
    T__17 = 18
    T__18 = 19
    T__19 = 20
    T__20 = 21
    T__21 = 22
    T__22 = 23
    T__23 = 24
    T__24 = 25
    T__25 = 26
    T__26 = 27
    T__27 = 28
    T__28 = 29
    T__29 = 30
    T__30 = 31
    T__31 = 32
    T__32 = 33
    T__33 = 34
    T__34 = 35
    T__35 = 36
    T__36 = 37
    T__37 = 38
    T__38 = 39
    T__39 = 40
    T__40 = 41
    T__41 = 42
    T__42 = 43
    T__43 = 44
    T__44 = 45
    T__45 = 46
    T__46 = 47
    T__47 = 48
    T__48 = 49
    T__49 = 50
    T__50 = 51
    T__51 = 52
    T__52 = 53
    Ident = 54
    IntLiteral = 55
    BoolLiteral = 56
    StringLiteral = 57
    Semicolon = 58
    Whitespace = 59
    BlockComment = 60
    LineComment = 61

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'AAAXAXAXA_'", "','", "'['", "']'", "'='", "'AXXAAXAAAXAX_'", 
            "'('", "')'", "'AAAAXA_'", "'{'", "'}'", "'AAXAAAAAAXA_'", "'AAXAAAAAA_'", 
            "'AAXAXXXAXA_'", "'AXXAAAAAAAXAAA_'", "'-'", "'!'", "'~'", "'++'", 
            "'--'", "'**'", "'*'", "'/'", "'%'", "'div'", "'+'", "'<<'", 
            "'>>'", "'>'", "'<'", "'>='", "'<='", "'=='", "'!='", "'&'", 
            "'^'", "'|'", "'&&'", "'^^'", "'||'", "'?'", "':'", "'*='", 
            "'/='", "'%='", "'div='", "'+='", "'-='", "'&='", "'|='", "'^='", 
            "'<<='", "'>>='", "':)'" ]

    symbolicNames = [ "<INVALID>",
            "Ident", "IntLiteral", "BoolLiteral", "StringLiteral", "Semicolon", 
            "Whitespace", "BlockComment", "LineComment" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "T__14", "T__15", "T__16", "T__17", "T__18", "T__19", 
                  "T__20", "T__21", "T__22", "T__23", "T__24", "T__25", 
                  "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", 
                  "T__32", "T__33", "T__34", "T__35", "T__36", "T__37", 
                  "T__38", "T__39", "T__40", "T__41", "T__42", "T__43", 
                  "T__44", "T__45", "T__46", "T__47", "T__48", "T__49", 
                  "T__50", "T__51", "T__52", "Ident", "IntLiteral", "BoolLiteral", 
                  "StringLiteral", "Semicolon", "Whitespace", "BlockComment", 
                  "LineComment" ]

    grammarFileName = "Xalang.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.9.2")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


