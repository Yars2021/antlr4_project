# Generated from ./Xalang.g4 by ANTLR 4.9.2
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO



def serializedATN():
    with StringIO() as buf:
        buf.write("\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\2>")
        buf.write("\u0181\b\1\4\2\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7")
        buf.write("\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13\t\13\4\f\t\f\4\r\t\r")
        buf.write("\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22\4\23")
        buf.write("\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30")
        buf.write("\4\31\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36")
        buf.write("\t\36\4\37\t\37\4 \t \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%")
        buf.write("\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4,\t,\4-\t-\4.")
        buf.write("\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64")
        buf.write("\t\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4:\t:")
        buf.write("\4;\t;\4<\t<\4=\t=\3\2\3\2\3\3\3\3\3\4\3\4\3\5\3\5\3\6")
        buf.write("\3\6\3\6\3\6\3\6\3\6\3\6\3\6\3\6\3\6\3\6\3\6\3\6\3\6\3")
        buf.write("\7\3\7\3\b\3\b\3\t\3\t\3\t\3\t\3\t\3\t\3\t\3\t\3\n\3\n")
        buf.write("\3\13\3\13\3\f\3\f\3\f\3\f\3\f\3\f\3\f\3\f\3\f\3\f\3\f")
        buf.write("\3\f\3\f\3\r\3\r\3\r\3\r\3\r\3\r\3\r\3\r\3\r\3\r\3\r\3")
        buf.write("\16\3\16\3\16\3\16\3\16\3\16\3\16\3\16\3\16\3\16\3\16")
        buf.write("\3\16\3\17\3\17\3\17\3\17\3\17\3\17\3\17\3\17\3\17\3\17")
        buf.write("\3\17\3\17\3\17\3\17\3\17\3\17\3\20\3\20\3\21\3\21\3\22")
        buf.write("\3\22\3\23\3\23\3\23\3\24\3\24\3\24\3\25\3\25\3\25\3\26")
        buf.write("\3\26\3\27\3\27\3\30\3\30\3\31\3\31\3\31\3\31\3\32\3\32")
        buf.write("\3\33\3\33\3\33\3\34\3\34\3\34\3\35\3\35\3\36\3\36\3\37")
        buf.write("\3\37\3\37\3 \3 \3 \3!\3!\3!\3\"\3\"\3\"\3#\3#\3$\3$\3")
        buf.write("%\3%\3&\3&\3&\3\'\3\'\3\'\3(\3(\3(\3)\3)\3*\3*\3+\3+\3")
        buf.write("+\3,\3,\3,\3-\3-\3-\3.\3.\3.\3.\3.\3/\3/\3/\3\60\3\60")
        buf.write("\3\60\3\61\3\61\3\61\3\62\3\62\3\62\3\63\3\63\3\63\3\64")
        buf.write("\3\64\3\64\3\64\3\65\3\65\3\65\3\65\3\66\3\66\7\66\u0141")
        buf.write("\n\66\f\66\16\66\u0144\13\66\3\67\5\67\u0147\n\67\3\67")
        buf.write("\6\67\u014a\n\67\r\67\16\67\u014b\38\38\38\38\38\38\3")
        buf.write("8\38\38\58\u0157\n8\39\39\79\u015b\n9\f9\169\u015e\13")
        buf.write("9\39\39\3:\3:\3:\3;\3;\3;\3;\3<\3<\3<\3<\7<\u016d\n<\f")
        buf.write("<\16<\u0170\13<\3<\3<\3<\3<\3<\3=\3=\3=\3=\7=\u017b\n")
        buf.write("=\f=\16=\u017e\13=\3=\3=\4\u015c\u016e\2>\3\3\5\4\7\5")
        buf.write("\t\6\13\7\r\b\17\t\21\n\23\13\25\f\27\r\31\16\33\17\35")
        buf.write("\20\37\21!\22#\23%\24\'\25)\26+\27-\30/\31\61\32\63\33")
        buf.write("\65\34\67\359\36;\37= ?!A\"C#E$G%I&K\'M(O)Q*S+U,W-Y.[")
        buf.write("/]\60_\61a\62c\63e\64g\65i\66k\67m8o9q:s;u<w=y>\3\2\6")
        buf.write("\5\2C\\aac|\6\2\62;C\\aac|\5\2\13\f\17\17\"\"\4\2\f\f")
        buf.write("\17\17\2\u0187\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t")
        buf.write("\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21\3")
        buf.write("\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3\2")
        buf.write("\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2")
        buf.write("\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2")
        buf.write("\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63\3\2\2\2\2\65")
        buf.write("\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2\2\2")
        buf.write("\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2")
        buf.write("\2\2I\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2")
        buf.write("\2\2\2S\3\2\2\2\2U\3\2\2\2\2W\3\2\2\2\2Y\3\2\2\2\2[\3")
        buf.write("\2\2\2\2]\3\2\2\2\2_\3\2\2\2\2a\3\2\2\2\2c\3\2\2\2\2e")
        buf.write("\3\2\2\2\2g\3\2\2\2\2i\3\2\2\2\2k\3\2\2\2\2m\3\2\2\2\2")
        buf.write("o\3\2\2\2\2q\3\2\2\2\2s\3\2\2\2\2u\3\2\2\2\2w\3\2\2\2")
        buf.write("\2y\3\2\2\2\3{\3\2\2\2\5}\3\2\2\2\7\177\3\2\2\2\t\u0081")
        buf.write("\3\2\2\2\13\u0083\3\2\2\2\r\u0091\3\2\2\2\17\u0093\3\2")
        buf.write("\2\2\21\u0095\3\2\2\2\23\u009d\3\2\2\2\25\u009f\3\2\2")
        buf.write("\2\27\u00a1\3\2\2\2\31\u00ae\3\2\2\2\33\u00b9\3\2\2\2")
        buf.write("\35\u00c5\3\2\2\2\37\u00d5\3\2\2\2!\u00d7\3\2\2\2#\u00d9")
        buf.write("\3\2\2\2%\u00db\3\2\2\2\'\u00de\3\2\2\2)\u00e1\3\2\2\2")
        buf.write("+\u00e4\3\2\2\2-\u00e6\3\2\2\2/\u00e8\3\2\2\2\61\u00ea")
        buf.write("\3\2\2\2\63\u00ee\3\2\2\2\65\u00f0\3\2\2\2\67\u00f3\3")
        buf.write("\2\2\29\u00f6\3\2\2\2;\u00f8\3\2\2\2=\u00fa\3\2\2\2?\u00fd")
        buf.write("\3\2\2\2A\u0100\3\2\2\2C\u0103\3\2\2\2E\u0106\3\2\2\2")
        buf.write("G\u0108\3\2\2\2I\u010a\3\2\2\2K\u010c\3\2\2\2M\u010f\3")
        buf.write("\2\2\2O\u0112\3\2\2\2Q\u0115\3\2\2\2S\u0117\3\2\2\2U\u0119")
        buf.write("\3\2\2\2W\u011c\3\2\2\2Y\u011f\3\2\2\2[\u0122\3\2\2\2")
        buf.write("]\u0127\3\2\2\2_\u012a\3\2\2\2a\u012d\3\2\2\2c\u0130\3")
        buf.write("\2\2\2e\u0133\3\2\2\2g\u0136\3\2\2\2i\u013a\3\2\2\2k\u013e")
        buf.write("\3\2\2\2m\u0146\3\2\2\2o\u0156\3\2\2\2q\u0158\3\2\2\2")
        buf.write("s\u0161\3\2\2\2u\u0164\3\2\2\2w\u0168\3\2\2\2y\u0176\3")
        buf.write("\2\2\2{|\7.\2\2|\4\3\2\2\2}~\7]\2\2~\6\3\2\2\2\177\u0080")
        buf.write("\7_\2\2\u0080\b\3\2\2\2\u0081\u0082\7?\2\2\u0082\n\3\2")
        buf.write("\2\2\u0083\u0084\7C\2\2\u0084\u0085\7Z\2\2\u0085\u0086")
        buf.write("\7Z\2\2\u0086\u0087\7C\2\2\u0087\u0088\7C\2\2\u0088\u0089")
        buf.write("\7Z\2\2\u0089\u008a\7C\2\2\u008a\u008b\7C\2\2\u008b\u008c")
        buf.write("\7C\2\2\u008c\u008d\7Z\2\2\u008d\u008e\7C\2\2\u008e\u008f")
        buf.write("\7Z\2\2\u008f\u0090\7a\2\2\u0090\f\3\2\2\2\u0091\u0092")
        buf.write("\7*\2\2\u0092\16\3\2\2\2\u0093\u0094\7+\2\2\u0094\20\3")
        buf.write("\2\2\2\u0095\u0096\7C\2\2\u0096\u0097\7C\2\2\u0097\u0098")
        buf.write("\7C\2\2\u0098\u0099\7C\2\2\u0099\u009a\7Z\2\2\u009a\u009b")
        buf.write("\7C\2\2\u009b\u009c\7a\2\2\u009c\22\3\2\2\2\u009d\u009e")
        buf.write("\7}\2\2\u009e\24\3\2\2\2\u009f\u00a0\7\177\2\2\u00a0\26")
        buf.write("\3\2\2\2\u00a1\u00a2\7C\2\2\u00a2\u00a3\7C\2\2\u00a3\u00a4")
        buf.write("\7Z\2\2\u00a4\u00a5\7C\2\2\u00a5\u00a6\7C\2\2\u00a6\u00a7")
        buf.write("\7C\2\2\u00a7\u00a8\7C\2\2\u00a8\u00a9\7C\2\2\u00a9\u00aa")
        buf.write("\7C\2\2\u00aa\u00ab\7Z\2\2\u00ab\u00ac\7C\2\2\u00ac\u00ad")
        buf.write("\7a\2\2\u00ad\30\3\2\2\2\u00ae\u00af\7C\2\2\u00af\u00b0")
        buf.write("\7C\2\2\u00b0\u00b1\7Z\2\2\u00b1\u00b2\7C\2\2\u00b2\u00b3")
        buf.write("\7C\2\2\u00b3\u00b4\7C\2\2\u00b4\u00b5\7C\2\2\u00b5\u00b6")
        buf.write("\7C\2\2\u00b6\u00b7\7C\2\2\u00b7\u00b8\7a\2\2\u00b8\32")
        buf.write("\3\2\2\2\u00b9\u00ba\7C\2\2\u00ba\u00bb\7C\2\2\u00bb\u00bc")
        buf.write("\7Z\2\2\u00bc\u00bd\7C\2\2\u00bd\u00be\7Z\2\2\u00be\u00bf")
        buf.write("\7Z\2\2\u00bf\u00c0\7Z\2\2\u00c0\u00c1\7C\2\2\u00c1\u00c2")
        buf.write("\7Z\2\2\u00c2\u00c3\7C\2\2\u00c3\u00c4\7a\2\2\u00c4\34")
        buf.write("\3\2\2\2\u00c5\u00c6\7C\2\2\u00c6\u00c7\7Z\2\2\u00c7\u00c8")
        buf.write("\7Z\2\2\u00c8\u00c9\7C\2\2\u00c9\u00ca\7C\2\2\u00ca\u00cb")
        buf.write("\7C\2\2\u00cb\u00cc\7C\2\2\u00cc\u00cd\7C\2\2\u00cd\u00ce")
        buf.write("\7C\2\2\u00ce\u00cf\7C\2\2\u00cf\u00d0\7Z\2\2\u00d0\u00d1")
        buf.write("\7C\2\2\u00d1\u00d2\7C\2\2\u00d2\u00d3\7C\2\2\u00d3\u00d4")
        buf.write("\7a\2\2\u00d4\36\3\2\2\2\u00d5\u00d6\7/\2\2\u00d6 \3\2")
        buf.write("\2\2\u00d7\u00d8\7#\2\2\u00d8\"\3\2\2\2\u00d9\u00da\7")
        buf.write("\u0080\2\2\u00da$\3\2\2\2\u00db\u00dc\7-\2\2\u00dc\u00dd")
        buf.write("\7-\2\2\u00dd&\3\2\2\2\u00de\u00df\7/\2\2\u00df\u00e0")
        buf.write("\7/\2\2\u00e0(\3\2\2\2\u00e1\u00e2\7,\2\2\u00e2\u00e3")
        buf.write("\7,\2\2\u00e3*\3\2\2\2\u00e4\u00e5\7,\2\2\u00e5,\3\2\2")
        buf.write("\2\u00e6\u00e7\7\61\2\2\u00e7.\3\2\2\2\u00e8\u00e9\7\'")
        buf.write("\2\2\u00e9\60\3\2\2\2\u00ea\u00eb\7f\2\2\u00eb\u00ec\7")
        buf.write("k\2\2\u00ec\u00ed\7x\2\2\u00ed\62\3\2\2\2\u00ee\u00ef")
        buf.write("\7-\2\2\u00ef\64\3\2\2\2\u00f0\u00f1\7>\2\2\u00f1\u00f2")
        buf.write("\7>\2\2\u00f2\66\3\2\2\2\u00f3\u00f4\7@\2\2\u00f4\u00f5")
        buf.write("\7@\2\2\u00f58\3\2\2\2\u00f6\u00f7\7@\2\2\u00f7:\3\2\2")
        buf.write("\2\u00f8\u00f9\7>\2\2\u00f9<\3\2\2\2\u00fa\u00fb\7@\2")
        buf.write("\2\u00fb\u00fc\7?\2\2\u00fc>\3\2\2\2\u00fd\u00fe\7>\2")
        buf.write("\2\u00fe\u00ff\7?\2\2\u00ff@\3\2\2\2\u0100\u0101\7?\2")
        buf.write("\2\u0101\u0102\7?\2\2\u0102B\3\2\2\2\u0103\u0104\7#\2")
        buf.write("\2\u0104\u0105\7?\2\2\u0105D\3\2\2\2\u0106\u0107\7(\2")
        buf.write("\2\u0107F\3\2\2\2\u0108\u0109\7`\2\2\u0109H\3\2\2\2\u010a")
        buf.write("\u010b\7~\2\2\u010bJ\3\2\2\2\u010c\u010d\7(\2\2\u010d")
        buf.write("\u010e\7(\2\2\u010eL\3\2\2\2\u010f\u0110\7`\2\2\u0110")
        buf.write("\u0111\7`\2\2\u0111N\3\2\2\2\u0112\u0113\7~\2\2\u0113")
        buf.write("\u0114\7~\2\2\u0114P\3\2\2\2\u0115\u0116\7A\2\2\u0116")
        buf.write("R\3\2\2\2\u0117\u0118\7<\2\2\u0118T\3\2\2\2\u0119\u011a")
        buf.write("\7,\2\2\u011a\u011b\7?\2\2\u011bV\3\2\2\2\u011c\u011d")
        buf.write("\7\61\2\2\u011d\u011e\7?\2\2\u011eX\3\2\2\2\u011f\u0120")
        buf.write("\7\'\2\2\u0120\u0121\7?\2\2\u0121Z\3\2\2\2\u0122\u0123")
        buf.write("\7f\2\2\u0123\u0124\7k\2\2\u0124\u0125\7x\2\2\u0125\u0126")
        buf.write("\7?\2\2\u0126\\\3\2\2\2\u0127\u0128\7-\2\2\u0128\u0129")
        buf.write("\7?\2\2\u0129^\3\2\2\2\u012a\u012b\7/\2\2\u012b\u012c")
        buf.write("\7?\2\2\u012c`\3\2\2\2\u012d\u012e\7(\2\2\u012e\u012f")
        buf.write("\7?\2\2\u012fb\3\2\2\2\u0130\u0131\7~\2\2\u0131\u0132")
        buf.write("\7?\2\2\u0132d\3\2\2\2\u0133\u0134\7`\2\2\u0134\u0135")
        buf.write("\7?\2\2\u0135f\3\2\2\2\u0136\u0137\7>\2\2\u0137\u0138")
        buf.write("\7>\2\2\u0138\u0139\7?\2\2\u0139h\3\2\2\2\u013a\u013b")
        buf.write("\7@\2\2\u013b\u013c\7@\2\2\u013c\u013d\7?\2\2\u013dj\3")
        buf.write("\2\2\2\u013e\u0142\t\2\2\2\u013f\u0141\t\3\2\2\u0140\u013f")
        buf.write("\3\2\2\2\u0141\u0144\3\2\2\2\u0142\u0140\3\2\2\2\u0142")
        buf.write("\u0143\3\2\2\2\u0143l\3\2\2\2\u0144\u0142\3\2\2\2\u0145")
        buf.write("\u0147\7/\2\2\u0146\u0145\3\2\2\2\u0146\u0147\3\2\2\2")
        buf.write("\u0147\u0149\3\2\2\2\u0148\u014a\4\62;\2\u0149\u0148\3")
        buf.write("\2\2\2\u014a\u014b\3\2\2\2\u014b\u0149\3\2\2\2\u014b\u014c")
        buf.write("\3\2\2\2\u014cn\3\2\2\2\u014d\u014e\7V\2\2\u014e\u014f")
        buf.write("\7t\2\2\u014f\u0150\7w\2\2\u0150\u0157\7g\2\2\u0151\u0152")
        buf.write("\7H\2\2\u0152\u0153\7c\2\2\u0153\u0154\7n\2\2\u0154\u0155")
        buf.write("\7u\2\2\u0155\u0157\7g\2\2\u0156\u014d\3\2\2\2\u0156\u0151")
        buf.write("\3\2\2\2\u0157p\3\2\2\2\u0158\u015c\7$\2\2\u0159\u015b")
        buf.write("\13\2\2\2\u015a\u0159\3\2\2\2\u015b\u015e\3\2\2\2\u015c")
        buf.write("\u015d\3\2\2\2\u015c\u015a\3\2\2\2\u015d\u015f\3\2\2\2")
        buf.write("\u015e\u015c\3\2\2\2\u015f\u0160\7$\2\2\u0160r\3\2\2\2")
        buf.write("\u0161\u0162\7<\2\2\u0162\u0163\7+\2\2\u0163t\3\2\2\2")
        buf.write("\u0164\u0165\t\4\2\2\u0165\u0166\3\2\2\2\u0166\u0167\b")
        buf.write(";\2\2\u0167v\3\2\2\2\u0168\u0169\7\61\2\2\u0169\u016a")
        buf.write("\7,\2\2\u016a\u016e\3\2\2\2\u016b\u016d\13\2\2\2\u016c")
        buf.write("\u016b\3\2\2\2\u016d\u0170\3\2\2\2\u016e\u016f\3\2\2\2")
        buf.write("\u016e\u016c\3\2\2\2\u016f\u0171\3\2\2\2\u0170\u016e\3")
        buf.write("\2\2\2\u0171\u0172\7,\2\2\u0172\u0173\7\61\2\2\u0173\u0174")
        buf.write("\3\2\2\2\u0174\u0175\b<\2\2\u0175x\3\2\2\2\u0176\u0177")
        buf.write("\7\61\2\2\u0177\u0178\7\61\2\2\u0178\u017c\3\2\2\2\u0179")
        buf.write("\u017b\n\5\2\2\u017a\u0179\3\2\2\2\u017b\u017e\3\2\2\2")
        buf.write("\u017c\u017a\3\2\2\2\u017c\u017d\3\2\2\2\u017d\u017f\3")
        buf.write("\2\2\2\u017e\u017c\3\2\2\2\u017f\u0180\b=\2\2\u0180z\3")
        buf.write("\2\2\2\n\2\u0142\u0146\u014b\u0156\u015c\u016e\u017c\3")
        buf.write("\b\2\2")
        return buf.getvalue()


class XalangLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    T__15 = 16
    T__16 = 17
    T__17 = 18
    T__18 = 19
    T__19 = 20
    T__20 = 21
    T__21 = 22
    T__22 = 23
    T__23 = 24
    T__24 = 25
    T__25 = 26
    T__26 = 27
    T__27 = 28
    T__28 = 29
    T__29 = 30
    T__30 = 31
    T__31 = 32
    T__32 = 33
    T__33 = 34
    T__34 = 35
    T__35 = 36
    T__36 = 37
    T__37 = 38
    T__38 = 39
    T__39 = 40
    T__40 = 41
    T__41 = 42
    T__42 = 43
    T__43 = 44
    T__44 = 45
    T__45 = 46
    T__46 = 47
    T__47 = 48
    T__48 = 49
    T__49 = 50
    T__50 = 51
    T__51 = 52
    Ident = 53
    IntLiteral = 54
    BoolLiteral = 55
    StringLiteral = 56
    Semicolon = 57
    Whitespace = 58
    BlockComment = 59
    LineComment = 60

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "','", "'['", "']'", "'='", "'AXXAAXAAAXAX_'", "'('", "')'", 
            "'AAAAXA_'", "'{'", "'}'", "'AAXAAAAAAXA_'", "'AAXAAAAAA_'", 
            "'AAXAXXXAXA_'", "'AXXAAAAAAAXAAA_'", "'-'", "'!'", "'~'", "'++'", 
            "'--'", "'**'", "'*'", "'/'", "'%'", "'div'", "'+'", "'<<'", 
            "'>>'", "'>'", "'<'", "'>='", "'<='", "'=='", "'!='", "'&'", 
            "'^'", "'|'", "'&&'", "'^^'", "'||'", "'?'", "':'", "'*='", 
            "'/='", "'%='", "'div='", "'+='", "'-='", "'&='", "'|='", "'^='", 
            "'<<='", "'>>='", "':)'" ]

    symbolicNames = [ "<INVALID>",
            "Ident", "IntLiteral", "BoolLiteral", "StringLiteral", "Semicolon", 
            "Whitespace", "BlockComment", "LineComment" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "T__14", "T__15", "T__16", "T__17", "T__18", "T__19", 
                  "T__20", "T__21", "T__22", "T__23", "T__24", "T__25", 
                  "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", 
                  "T__32", "T__33", "T__34", "T__35", "T__36", "T__37", 
                  "T__38", "T__39", "T__40", "T__41", "T__42", "T__43", 
                  "T__44", "T__45", "T__46", "T__47", "T__48", "T__49", 
                  "T__50", "T__51", "Ident", "IntLiteral", "BoolLiteral", 
                  "StringLiteral", "Semicolon", "Whitespace", "BlockComment", 
                  "LineComment" ]

    grammarFileName = "Xalang.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.9.2")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


